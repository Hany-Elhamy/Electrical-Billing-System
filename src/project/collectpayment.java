/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package project;
import javax.swing.JOptionPane;
import java.io.*;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Omar
 */
public class collectpayment extends javax.swing.JFrame {
     static String p ;
       static int i=1;
       
objectt nn=new objectt();
    /**
     * Creates new form collectpayment
     */
    public collectpayment() {
        initComponents();
        setSize(480, 330);
                setVisible(true);
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    String end="",meter="",email="",real="";
    String [] a;
     String [] b;
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        reading = new javax.swing.JTextField();
        submit = new javax.swing.JButton();
        exit = new javax.swing.JButton();
        back = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        metercode = new javax.swing.JTextField();
        tarrif = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();

        jLabel3.setIcon(new javax.swing.ImageIcon("D:\\importan papers\\pl2\\project\\incandescent-bulbs-photo.jpg")); // NOI18N
        jLabel3.setText("jLabel3");
        jLabel3.setToolTipText("image");

        jLabel4.setIcon(new javax.swing.ImageIcon("D:\\importan papers\\pl2\\project\\incandescent-bulbs-photo.jpg")); // NOI18N
        jLabel4.setText("jLabel4");

        jLabel5.setIcon(new javax.swing.ImageIcon("D:\\importan papers\\pl2\\project\\incandescent-bulbs-photo.jpg")); // NOI18N
        jLabel5.setText("jLabel5");

        jLabel6.setIcon(new javax.swing.ImageIcon("D:\\importan papers\\pl2\\project\\incandescent-bulbs-photo.jpg")); // NOI18N
        jLabel6.setText("jLabel6");

        jLabel8.setIcon(new javax.swing.ImageIcon("D:\\importan papers\\pl2\\project\\incandescent-bulbs-photo.jpg")); // NOI18N
        jLabel8.setText("jLabel8");

        jLabel9.setIcon(new javax.swing.ImageIcon("D:\\importan papers\\pl2\\project\\incandescent-bulbs-photo.jpg")); // NOI18N
        jLabel9.setText("jLabel9");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("electricity company");
        getContentPane().setLayout(null);

        jLabel1.setBackground(new java.awt.Color(204, 204, 204));
        jLabel1.setFont(new java.awt.Font("Tahoma", 2, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(204, 204, 204));
        jLabel1.setText("please enter your reading:");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(10, 50, 209, 37);

        reading.setBackground(new java.awt.Color(204, 204, 204));
        reading.setFont(new java.awt.Font("Tahoma", 2, 18)); // NOI18N
        reading.setForeground(new java.awt.Color(102, 0, 0));
        reading.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                readingActionPerformed(evt);
            }
        });
        getContentPane().add(reading);
        reading.setBounds(230, 58, 170, 30);

        submit.setBackground(new java.awt.Color(204, 204, 204));
        submit.setFont(new java.awt.Font("Tahoma", 2, 18)); // NOI18N
        submit.setForeground(new java.awt.Color(102, 0, 0));
        submit.setText("submit reading");
        submit.setToolTipText("submit_reading_");
        submit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submit_reading_ActionPerformed(evt);
            }
        });
        getContentPane().add(submit);
        submit.setBounds(20, 160, 160, 31);

        exit.setBackground(new java.awt.Color(204, 204, 204));
        exit.setFont(new java.awt.Font("Tahoma", 2, 18)); // NOI18N
        exit.setForeground(new java.awt.Color(102, 0, 0));
        exit.setText("exit");
        exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitActionPerformed(evt);
            }
        });
        getContentPane().add(exit);
        exit.setBounds(300, 240, 80, 31);

        back.setBackground(new java.awt.Color(204, 204, 204));
        back.setFont(new java.awt.Font("Tahoma", 2, 18)); // NOI18N
        back.setForeground(new java.awt.Color(102, 0, 0));
        back.setText("back");
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });
        getContentPane().add(back);
        back.setBounds(30, 250, 90, 31);

        jLabel2.setBackground(new java.awt.Color(204, 204, 204));
        jLabel2.setFont(new java.awt.Font("Tahoma", 2, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(204, 204, 204));
        jLabel2.setText("enter your meter code :");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(10, 10, 200, 20);

        metercode.setBackground(new java.awt.Color(204, 204, 204));
        metercode.setFont(new java.awt.Font("Tahoma", 2, 18)); // NOI18N
        metercode.setForeground(new java.awt.Color(102, 0, 0));
        metercode.setToolTipText("");
        metercode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                metercode(evt);
            }
        });
        getContentPane().add(metercode);
        metercode.setBounds(230, 10, 170, 30);

        tarrif.setBackground(new java.awt.Color(204, 204, 204));
        tarrif.setFont(new java.awt.Font("Tahoma", 2, 18)); // NOI18N
        tarrif.setForeground(new java.awt.Color(102, 0, 0));
        tarrif.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tarrifActionPerformed(evt);
            }
        });
        getContentPane().add(tarrif);
        tarrif.setBounds(230, 100, 170, 30);

        jButton1.setBackground(new java.awt.Color(204, 204, 204));
        jButton1.setFont(new java.awt.Font("Tahoma", 2, 18)); // NOI18N
        jButton1.setForeground(new java.awt.Color(102, 0, 0));
        jButton1.setText("pay");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(230, 160, 160, 31);

        jLabel10.setBackground(new java.awt.Color(204, 204, 204));
        jLabel10.setFont(new java.awt.Font("Tahoma", 2, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(204, 204, 204));
        jLabel10.setText("payment");
        getContentPane().add(jLabel10);
        jLabel10.setBounds(20, 100, 160, 30);

        jLabel11.setIcon(new javax.swing.ImageIcon("D:\\importan papers\\pl2\\project\\incandescent-bulbs-photo.jpg")); // NOI18N
        jLabel11.setText("jLabel11");
        getContentPane().add(jLabel11);
        jLabel11.setBounds(0, 0, 460, 280);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void submit_reading_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submit_reading_ActionPerformed
try{
    boolean check=false;
     BufferedReader r=nn.file_read(nn.meter_code);
       // File f=new File("D:\\importan papers\\pl2\\section\\operator\\build\\classes\\operator\\new and old\\meter codes.txt");
          // FileReader fr=new FileReader(f);
       // BufferedReader r=new BufferedReader(fr);
          String s=(metercode.getText()).toString();
          String struct;
          String struct1;
          BufferedReader n=nn.file_read(nn.real);
            while((struct1=n.readLine())!=null){
            if(struct1.contains(metercode.getText().trim())){
                 String []arr=struct1.split("[|]");
                real=arr[1];
            }
             
            }
             System.out.println(real);
          while((struct=r.readLine())!=null){
              if(struct.equals(s+" |active"))
              {if(reading.getText().equals(real)){
                  check=true;    
                
                    double charge;
         int  read = Integer.parseInt(reading.getText());
         if(read<500){
             charge=1.00;
         }
         else if(read<500 && read<600){
             charge=1.80;
         }
         else if(read<600 &&read<800){
             charge=2.80;
         }
         else{
             charge=3.00;
         }
     double payment=charge*read;
    p =Double.toString(payment);
     tarrif.setText(p);
              }
              else{  JOptionPane.showMessageDialog(null,"reading incorrect" ," error", JOptionPane.ERROR_MESSAGE);  
              }}}
     if(metercode.getText().isEmpty())
              { check=true;
                   JOptionPane.showMessageDialog(null,"please enter meter code" ," METER CODE invalid", JOptionPane.ERROR_MESSAGE);
                   reading.setText("");
        tarrif.setText("");
              }
          else if(!check)
              {
                  
                   JOptionPane.showMessageDialog(null,"the meter code is not correct or stopped" ," METER CODE invalid", JOptionPane.ERROR_MESSAGE);
                   reading.setText("");
        tarrif.setText("");
              }
       System.out.println(check);

}
              catch (IOException e) 
         {
             
           System.out.println("An error occurred.");
              
          }        
        
        
    }//GEN-LAST:event_submit_reading_ActionPerformed

    private void exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitActionPerformed
       System.exit(0);
    }//GEN-LAST:event_exitActionPerformed

    private void readingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_readingActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_readingActionPerformed

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        path  c= new path();
              c.setVisible(true);
              c.show();
        this.dispose();
    }//GEN-LAST:event_backActionPerformed

    private void metercode(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_metercode
        // TODO add your handling code here:
    }//GEN-LAST:event_metercode

    private void tarrifActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tarrifActionPerformed
         
      
         
    }//GEN-LAST:event_tarrifActionPerformed
    String region="";
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
         try{
    boolean check=false;
  
   BufferedReader r=nn.file_read(nn.meter_code);
          String ss=(metercode.getText()).toString();
          String struct;
          while((struct=r.readLine())!=null){
              if(struct.equals(ss+" |active"))
              {check=true;    
             double charge;
         int  read = Integer.parseInt(reading.getText());
         if(read<500){
             charge=1.00;
         }
         else if(read<500 && read<600){
             charge=1.80;
         }
         else if(read<600 &&read<800){
             charge=2.80;
         }
         else{
             charge=3.00;
         }
          double payment=charge*read;
    p =Double.toString(payment);
     tarrif.setText(p);
       String SPACE="|";
        Date star=new Date();

         String s=metercode.getText()+SPACE+reading.getText()+SPACE+p+SPACE+charge+SPACE+ star.toLocaleString()+"\n";
         nn.file_write(nn.collect_payments, s,true);
         nn.file_write(nn.tarrif,metercode.getText()+"|"+charge+'\n' , true);
              try{
            String struct2;
               String o[];
               String y="";
              BufferedReader ll=nn.file_read(nn.info);
                     while((struct2=ll.readLine())!=null){
                         if(struct2.contains(metercode.getText())){
                            o=struct2.split("[|]"); 
                            y=o[3];
                         }
                         }
              nn.file_write(nn.readings,y+"|"+reading.getText()+"\n", true);
                 JOptionPane.showMessageDialog(null,"transaction done successfully" ,"successful", JOptionPane.INFORMATION_MESSAGE);
        }
        
        catch (FileNotFoundException ex) {
             Logger.getLogger(collectpayment.class.getName()).log(Level.SEVERE, null, ex);
         } catch (IOException ex) {
             Logger.getLogger(collectpayment.class.getName()).log(Level.SEVERE, null, ex);
         }
         }}  if(metercode.getText().isEmpty())
              { check=true;
                   JOptionPane.showMessageDialog(null,"please enter meter code" ," METER CODE invalid", JOptionPane.ERROR_MESSAGE);
              }
          else if(!check)
              {
                  
                   JOptionPane.showMessageDialog(null,"the meter code is not correct or stoped" ," METER CODE invalid", JOptionPane.ERROR_MESSAGE);
              }
         }     
        catch (IOException g) {
      System.out.println("An error occurred.");
        }
       
        
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(collectpayment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(collectpayment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(collectpayment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(collectpayment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new collectpayment().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton back;
    private javax.swing.JButton exit;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField metercode;
    private javax.swing.JTextField reading;
    private javax.swing.JButton submit;
    private javax.swing.JTextField tarrif;
    // End of variables declaration//GEN-END:variables
}
