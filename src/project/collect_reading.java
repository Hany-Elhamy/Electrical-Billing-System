/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package project;
import sendingemail.*;
import javax.mail.*;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;
import java.util.Properties;
import javax.swing.JOptionPane;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.text.ParseException;
import java.util.Calendar;
import java.util.Date;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author pc
 */
public class collect_reading extends javax.swing.JFrame {
 objectt nn=new objectt();
    /**
     * Creates new form collect_reading
     */
    public collect_reading() {
        initComponents();
        setSize(420, 330);
                setVisible(true);
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        meter_code = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        reading = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        jLabel1.setBackground(new java.awt.Color(204, 204, 204));
        jLabel1.setFont(new java.awt.Font("Tahoma", 2, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(204, 204, 204));
        jLabel1.setText(" assign reading");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(136, 13, 133, 25);

        jLabel2.setBackground(new java.awt.Color(204, 204, 204));
        jLabel2.setFont(new java.awt.Font("Tahoma", 2, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(204, 204, 204));
        jLabel2.setText("Enter meter code");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(10, 50, 137, 30);

        meter_code.setBackground(new java.awt.Color(204, 204, 204));
        meter_code.setFont(new java.awt.Font("Tahoma", 2, 18)); // NOI18N
        meter_code.setForeground(new java.awt.Color(102, 0, 0));
        meter_code.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                meter_codeActionPerformed(evt);
            }
        });
        getContentPane().add(meter_code);
        meter_code.setBounds(240, 50, 137, 32);

        jLabel3.setBackground(new java.awt.Color(204, 204, 204));
        jLabel3.setFont(new java.awt.Font("Tahoma", 2, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(204, 204, 204));
        jLabel3.setText("Enter Reading");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(10, 130, 137, 24);

        reading.setBackground(new java.awt.Color(204, 204, 204));
        reading.setFont(new java.awt.Font("Tahoma", 2, 18)); // NOI18N
        reading.setForeground(new java.awt.Color(102, 0, 0));
        reading.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                readingActionPerformed(evt);
            }
        });
        getContentPane().add(reading);
        reading.setBounds(240, 130, 137, 33);

        jButton1.setBackground(new java.awt.Color(204, 204, 204));
        jButton1.setFont(new java.awt.Font("Tahoma", 2, 18)); // NOI18N
        jButton1.setForeground(new java.awt.Color(102, 0, 0));
        jButton1.setText("Assign");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(30, 250, 94, 30);

        jButton2.setBackground(new java.awt.Color(204, 204, 204));
        jButton2.setFont(new java.awt.Font("Tahoma", 2, 18)); // NOI18N
        jButton2.setForeground(new java.awt.Color(102, 0, 0));
        jButton2.setText("Back");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2);
        jButton2.setBounds(160, 250, 86, 33);

        jButton3.setBackground(new java.awt.Color(204, 204, 204));
        jButton3.setFont(new java.awt.Font("Tahoma", 2, 18)); // NOI18N
        jButton3.setForeground(new java.awt.Color(102, 0, 0));
        jButton3.setText("check");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3);
        jButton3.setBounds(280, 250, 90, 31);

        jLabel4.setIcon(new javax.swing.ImageIcon("D:\\importan papers\\pl2\\project\\im.jpeg")); // NOI18N
        jLabel4.setText("jLabel4");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(0, 0, 400, 300);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    Date dd=new Date();
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            // TODO add your handling code here:
           
              boolean check=false;
            //FileReader fr=new FileReader("C:\\Users\\pc\\Documents\\NetBeansProjects\\main_interface\\files\\meter_code.txt");
            BufferedReader bf=nn.file_read(nn.meter_code);
            String struct;
            
            while((struct=bf.readLine())!=null)
            { 
                if(meter_code.getText().isEmpty())
            {
                JOptionPane.showMessageDialog(null,"please enter meter code" ,"the meter code is not valid", JOptionPane.ERROR_MESSAGE);
                check=true;
                break;
            }
               else if(struct.equals(meter_code.getText()+" |active"))
                {
                    nn.file_write(nn.real,meter_code.getText()+"|"+reading.getText()+"\n",true);
//                    FileWriter fw=new FileWriter("C:\\Users\\pc\\Documents\\NetBeansProjects\\main_interface\\files\\readings.txt",true);
//                    fw.write(struct+"|"+reading.getText()+"|"+dd.toString()+"\n");
//                    fw.close();
                    check=true;
                    JOptionPane.showMessageDialog(null,"reading is added" ,"added succssefully", JOptionPane.INFORMATION_MESSAGE);
                 
                }
            }
            if(!check)
            {
                JOptionPane.showMessageDialog(null,"meter code is not valid" ,"the meter code is not valid", JOptionPane.ERROR_MESSAGE);
            }
        } catch (FileNotFoundException ex) {
            Logger.getLogger(collect_reading.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(collect_reading.class.getName()).log(Level.SEVERE, null, ex);
        }
         reading.setText("");
         meter_code.setText("");
    }//GEN-LAST:event_jButton1ActionPerformed

    private void readingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_readingActionPerformed
  
    }//GEN-LAST:event_readingActionPerformed

    private void meter_codeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_meter_codeActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_meter_codeActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        path print= new path();
              print.setVisible(true);
             print.show();
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
       String meter_code="",email="";
    try {
          Date o=new Date();
        String s=o.toLocaleString();
          
        String [] b=null;
        String []bbb=null;
        String [] b2=s.split("/");  
        String [] bb=b2[2].split(" ");
            
         BufferedReader mm=nn.file_read(nn.collect_payments);
        
         String struct;
         while((struct=mm.readLine())!=null){
             
             String []a=struct.split("[|]");
              String date=a[4];
        meter_code=a[0];
              
                b=date.split("/");
                bbb=b[2].split(" ");
               
              Calendar cal = Calendar.getInstance();

        cal.set(Calendar.DAY_OF_MONTH, Integer.parseInt(b2[0]));
        cal.set(Calendar.MONTH, Integer.parseInt(b2[1]));
        cal.set(Calendar.YEAR, Integer.parseInt(bb[0]));
        Date firstDate = cal.getTime();

        cal.set(Calendar.DAY_OF_MONTH, Integer.parseInt(b[0]));
        cal.set(Calendar.MONTH, Integer.parseInt(b[1]));
        cal.set(Calendar.YEAR, Integer.parseInt(bbb[0]));
        Date secondDate = cal.getTime();
        long diff =  firstDate.getTime()-secondDate.getTime();
           long c=diff / 1000 / 60 / 60 / 24;
        System.out.println ("Days: " +diff / 1000 / 60 / 60 / 24);
        if(c==1)
        {
            
            System.out.println("message entered");
           BufferedReader bb5=nn.file_read(nn.info);
           String struct2;
           while((struct2=bb5.readLine())!=null)
           {
               if(struct2.contains(meter_code.trim()))
               {
                  String [] vv=struct2.split("[|]");
                  email=vv[2];
                   System.out.println(email);
                  {
       String from = "electricitycompany4@gmail.com";
        String password = "electricity123";
        String host = "smtp.gmail.com";
        String to[] = new String[1];
        to[0]=email;
        String message ="please pay";
        Properties props = System.getProperties();
        props.put("mail.smtp.starttls.enable", "true");
        props.put("mail.smtp.host", host);
        props.put("mail.smtp.user", from);
        props.put("mail.smtp.password", password);
        props.put("mail.smtp.port", 587);
        props.put("mail.smtp.auth", "true");
        props.put("mail.smtp.ssl.trust", "smtp.gmail.com");
        Session session = Session.getDefaultInstance(props, null);
        MimeMessage mimeMessage = new MimeMessage(session);
        try {
            mimeMessage.setFrom(new InternetAddress(from));
            InternetAddress[] toAddress = new InternetAddress[to.length];
            for (int i = 0; i < to.length; i++) {
                toAddress[i] = new InternetAddress(to[i]);
            }

            for (int i = 0; i < toAddress.length; i++) {
                mimeMessage.addRecipient(Message.RecipientType.TO, toAddress[i]);
                mimeMessage.setSubject("out of date");
                mimeMessage.setText(message);
                Transport transport = session.getTransport("smtp");
                transport.connect(host, from, password);
                transport.sendMessage(mimeMessage, mimeMessage.getAllRecipients());
                transport.close();
            }

        } catch (MessagingException me) {
            me.printStackTrace();
        }
       } 
                  
               }
           }
        }
         }
     } catch (IOException ex) {
         Logger.getLogger(collect_reading.class.getName()).log(Level.SEVERE, null, ex);
     }
    
        
        
        
        
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(collect_reading.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(collect_reading.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(collect_reading.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(collect_reading.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new collect_reading().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField meter_code;
    private javax.swing.JTextField reading;
    // End of variables declaration//GEN-END:variables
}
